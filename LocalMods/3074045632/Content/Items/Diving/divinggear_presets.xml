<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Items>
    <!-- A helmet preset for which other helmets are based on. Don't change anything in this item! If you want to add more helmets or make your suits compatible, copy the exampledivingsuithelmet item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuithelmetpreset" category="Diving,Equipment" tags="mediumitem,divinghelmet,provocative" scale="0.3" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_light" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Helmet Item" texture="Content/Items/Jobgear/headgears.png" sourcerect="5,4,92,94" depth="0.55" origin="0.5,0.5" />
      <!-- Sprite that makes the helmet invisible when contained in diving suit lockers to prevent it showing up floating in mid-air -->
      <ContainedSprite name="Diving Helmet Behind Window" allowedcontainertags="divingsuitcontainerwindow" texture="Content/Items/Jobgear/headgears.png" sourcerect="0,0,1,1" depth="0.55" origin="-0.12,-0.13" />
      <Body radius="45" width="34" density="20" />
      <!-- ItemComponent to store all effects that should apply to all helmets -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hashelmet" if it's a player and wearing a diving suit + diving helmet -->
        <StatusEffect type="OnWearing" target="Character" tags="hashelmet" setvalue="true" interval="0.1" duration="0.2" />
        <!-- damage suit seal when wearing the helmet in water -->
        <StatusEffect type="OnWearing" target="Contained" targetslot="1" condition="-0.05">
          <RequiredItem items="seal" type="Contained" />
          <Conditional InWater="true" />
        </StatusEffect>
        <!-- apply low pass filter when worn -->
        <StatusEffect type="OnWearing" target="Character" LowPassMultiplier="0.2" setvalue="true" disabledeltatime="true" />
        <!-- obstruct vision -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" setvalue="true" disabledeltatime="true" />
        <!-- play air breathing sound when not in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional InWater="false" />
          <Conditional IsDead="false" />
          <Sound file="Content/Items/Diving/DivingSuitLoop1.ogg" range="250" volume="1.5" loop="true" />
        </StatusEffect>
        <!-- play underwater breathing sound and create bubbles when in water -->
        <StatusEffect type="OnWearing" target="limb" targetlimb="head" interval="6" duration="0.5" comparison="And">
          <Conditional InWater="true" />
          <Conditional IsDead="false" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/DivingSuitBreathUnderwater1.ogg" range="400" volume="1.5" selectionmode="Random" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/DivingSuitBreathUnderwater2.ogg" range="400" volume="1.5" selectionmode="Random" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/DivingSuitBreathUnderwater3.ogg" range="400" volume="1.5" selectionmode="Random" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/DivingSuitBreathUnderwater4.ogg" range="400" volume="1.5" selectionmode="Random" />
          <ParticleEmitter particle="risingbubbles" velocitymin="10.0" velocitymax="10.0" scalemin="0.6" scalemax="0.6" particlespersecond="20" />
        </StatusEffect>
        <!-- damage the seal if the character has the "damageseal" tag which is applied on taking damage when having any suit pressure affliction | DIsabled
        <StatusEffect type="OnWearing" target="Character,Contained" targetslot="1" condition="-40">
          <Conditional HasStatusTag="eq damageseal" />
        </StatusEffect>
        -->
      </ItemComponent>
      <!-- GreaterComponent used to toggle between releasing or building up pressure by changing and checking for the timeframe value (1 = closed valve, 0 = open valve) -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- tag the character and helmet with "sealed" when wearing the suit, the pressure valve is closed and the character has the "hashelmet" and "hasseal" tags -->
        <StatusEffect type="OnWearing" target="This,Character" tags="sealed" interval="0.1" duration="0.2" comparison="And">
          <Conditional timeframe="eq 1" />
          <Conditional HasStatusTag="eq hassuit" />
          <Conditional HasStatusTag="eq hasseal" />
        </StatusEffect>
        <!-- release pressure visually -->
        <StatusEffect type="OnWearing" target="This,Character" tags="releasepressure" interval="0.1" duration="0.2" comparison="And">
          <Conditional timeframe="eq 0" />
        </StatusEffect>
        <!-- open the pressure valve if the wearer is unconcious while not in water and the pressure valve is closed -->
        <StatusEffect type="OnWearing" target="This,Character" timeframe="0" setvalue="true" interval="0.1" comparison="And">
          <Conditional timeframe="eq 1" />
          <Conditional InWater="false" />
          <Conditional vitality="lte 0" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/OpenValve.ogg" volume="3.5" range="150" />
        </StatusEffect>
        <!-- open the pressure valve if the wearer is unconcious while not in water and the pressure valve is closed | NT compatibility -->
        <StatusEffect type="OnWearing" target="This,Character" timeframe="0" setvalue="true" interval="0.1" comparison="And">
          <Conditional timeframe="eq 1" />
          <Conditional InWater="false" />
          <Conditional sym_unconsciousness="gt 0" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/OpenValve.ogg" volume="3.5" range="150" />
        </StatusEffect>
      </GreaterComponent>
      <!-- Helmet Light Interface -->
      <CustomInterface canbeselected="false" drawhudwhenequipped="true" allowuioverlap="false">
        <GuiFrame style="ItemUI" absoluteoffset="200,-100" anchor="BottomCenter" relativesize="0.1,0.08" />
        <TickBox text="interaction.togglesuitlight">
          <StatusEffect type="OnUse" target="This" targetitemcomponent="LightComponent" IsOn="true" setvalue="true" />
          <StatusEffect type="OnSecondaryUse" target="This" targetitemcomponent="LightComponent" IsOn="false" setvalue="true" />
        </TickBox>
      </CustomInterface>
      <!-- Pressure Valve Interface -->
      <CustomInterface canbeselected="false" drawhudwhenequipped="true" allowuioverlap="false">
        <GuiFrame style="ItemUI" absoluteoffset="-50,-100" anchor="BottomCenter" relativesize="0.14,0.12" />
        <Button text="interaction.openpressurevalve">
          <StatusEffect type="OnUse" target="This" timeframe="0" setvalue="true">
            <Conditional timeframe="eq 1" />
            <Sound file="%ModDir:3074045632%/Content/Items/Diving/OpenValve.ogg" volume="3.5" range="150" />
          </StatusEffect>
        </Button>
        <Button text="interaction.closepressurevalve">
          <StatusEffect type="OnUse" target="This" timeframe="1" setvalue="true">
            <Conditional timeframe="eq 0" />
            <Sound file="%ModDir:3074045632%/Content/Items/Diving/CloseValve.ogg" volume="3.5" range="150" />
          </StatusEffect>
        </Button>
      </CustomInterface>
      <!--<Holdable slots="RightHand,LeftHand" controlpose="true" holdpos="0,-30" handle1="0,-30" aimable="false" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use" />-->
      <Throwable slots="RightHand,LeftHand" controlpose="true" holdpos="0,-30" handle1="0,-10" aimable="true" aimpos="0,-30" msg="ItemMsgPickUpUse" throwforce="3.0" canbeselected="false" canbepicked="true" pickkey="Use">
        <StatusEffect type="OnSecondaryUse" target="This" delay="0.08">
          <Use />
        </StatusEffect>
      </Throwable>
      <Projectile characterusable="false" launchimpulse="0.0" impulsespread="0.0" sticktocharacters="false" sticktoitems="false" sticktostructures="false" sticktodoors="false">
        <Attack targetimpulse="3" severlimbsprobability="0.1" itemdamage="0" structuredamage="0" structuresoundtype="StructureSlash">
          <Affliction identifier="blunttrauma" strength="5" />
          <Affliction identifier="blunttrauma" strength="5" probability="0.5" />
          <Affliction identifier="blunttrauma" strength="5" probability="0.25" />
          <Affliction identifier="blunttrauma" strength="5" probability="0.1" />
          <Affliction identifier="stun" strength="0.9" />
          <Affliction identifier="stun" strength="0.9" probability="0.25" />
        </Attack>
        <StatusEffect type="OnImpact" target="UseTarget" disabledeltatime="true">
          <Conditional entitytype="Character" />
          <Sound file="Content/Items/Weapons/Smack1.ogg" selectionmode="random" range="1000" />
          <Sound file="Content/Items/Weapons/Smack2.ogg" range="1000" />
        </StatusEffect>
        <StatusEffect type="OnImpact" target="LastLimb" disabledeltatime="true">
          <Conditional limb="Head" />
          <Affliction identifier="stun" strength="2.5" />
          <Affliction identifier="concussion" strength="100.0" probability="0.4" />
        </StatusEffect>
      </Projectile>
      <Wearable slots="OuterClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <!-- HELMET INVENTORY -->
      <ItemContainer capacity="0" hideitems="true" containedstateindicatorslot="1">
        <SlotIcon slotindex="1" texture="%ModDir:3074045632%/Content/Items/Diving/SuitSealIcon.png" sourcerect="0,0,60,55" origin="0.5,0.5" />
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="128,448,64,64" origin="0.5,0.5" />
        <SubContainer capacity="1" maxstacksize="1">
          <Containable items="mobilebattery" />
        </SubContainer>
        <SubContainer capacity="1" maxstacksize="1">
          <Containable items="seal">
            <StatusEffect type="OnContaining" target="This,Character" tags="hasseal" setvalue="true" duration="0.2">
              <RequiredItem items="seal" type="Contained" />
            </StatusEffect>
          </Containable>
        </SubContainer>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
    <!-- A suit preset for 4000m depth pressure protection on which other suits are based on. Don't change anything in this item! If you want to add more suits or make your suits compatible, copy the exampledivingsuit item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuitpreset4000" category="Diving,Equipment" tags="diving,deepdiving,provocative" scale="0.5" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_heavy" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Suit Item" texture="Content/Items/Diving/DivingSuit_Item.png" sourcerect="0,0,146,120" depth="0.55" origin="0.5,0.5" />
      <Body radius="32" width="110" density="20" />
      <!-- ItemComponent to store all effects that should apply to all suits -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hassuit" if it's a player and wearing a diving suit + diving helmet and apply the corresponding pressure protection affliction -->
        <StatusEffect type="OnWearing" target="Character" tags="hassuit" interval="0.1" duration="0.2">
          <Conditional HasStatusTag="eq hashelmet" />
          <Affliction identifier="pressure4000" amount="1" />
        </StatusEffect>
        <!-- EFFECTS FOR ALL SUITS USING THIS PRESET -->
        <!-- play a water ambient sound when moving in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional IsLocalPlayer="true" />
          <Conditional InWater="true" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/SuitWaterAmbience.ogg" type="OnWearing" range="250" loop="true" volumeproperty="Speed" volume="0.8" frequencymultiplier="0.5" />
        </StatusEffect>
        <!-- BOT COMPATIBILITY -->
        <!-- spawn helmet and close valve -->
        <StatusEffect type="OnWearing" target="This" setvalue="true" interval="0.9" comparison="And">
          <Conditional IsBot="true" targetcontainer="true" />
          <Conditional HasStatusTag="neq hashelmet" targetcontainer="true" />
          <SpawnItem identifier="botdivingsuithelmet" spawnposition="SameInventory" spawnifinventoryfull="false" spawnifcantbecontained="false" />
        </StatusEffect>
        <!-- give pressure protection -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" tags="botsuit,sealed,hassuit" PressureProtection="4000.0" interval="0.1" duration="0.2" setvalue="true" disabledeltatime="true">
          <Conditional IsBot="true" />
        </StatusEffect>
        <!-- provide oxygen -->
        <StatusEffect type="OnWearing" target="Contained,Character" OxygenAvailable="1000.0">
          <Conditional IsBot="true" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
      </ItemComponent>
      <!-- GreaterComponent stores suit specific effects to prevent them from getting deleted if only adjusting wearable sprites in a variant item and easily target them specifically if adjustments are needed -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- SUIT SPECIFIC EFFECTS | Copy these into your suit item and adjust the values of condition draining, low pass multipliers, speed multipliers, oxygen refilling and damage modifiers to your liking or remove/add some -->
        <!-- block hull oxygen usage -->
        <StatusEffect type="OnWearing" target="This,Character" interval="0.2" duration="0.2" OxygenAvailable="-100.0" UseHullOxygen="false" comparison="And">
          <Conditional HasStatusTag="eq sealed" />
        </StatusEffect>
        <!-- reduce walking speed -->
        <StatusEffect type="OnWearing" target="Character" SpeedMultiplier="0.6" setvalue="true" interval="0.2" duration="0.2" disabledeltatime="true" />
        <!-- make the character stumble randomly every 2.1s when running with the diving suit 
        <StatusEffect type="OnWearing" target="This,Character" interval="2.1" comparison="And" disabledeltatime="true">
          <Conditional speed="gt 2.8" />
          <Conditional InWater="false" />
          <Affliction identifier="stun" amount="1.5" probability="0.35" />
        </StatusEffect>-->
        <!-- Refill oxygen when the suit is contained. -->
        <StatusEffect type="OnContained" target="Contained" targetslot="0" Condition="1.0" interval="1" disabledeltatime="true">
          <Conditional Voltage="gt 0.01" targetcontainer="true" targetgrandparent="true" targetitemcomponent="Powered" />
          <RequiredItem items="refillableoxygensource" type="Contained" excludebroken="false" excludefullcondition="true" />
        </StatusEffect>
        <!-- supply oxygen to the character and drain the oxygen tank if the valve is closed | also works for oxygenite tanks -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" OxygenAvailable="1000.0" Condition="-0.3" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
        <!-- supply welding fuel to the character and drain the welding fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="weldingfueltank" type="Contained" />
        </StatusEffect>
        <!-- supply incendium fuel to the character and drain the incendium fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetlimbs="Torso" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="incendiumfueltank" type="Contained" />
          <Affliction identifier="burn" amount="3.0" />
        </StatusEffect>
      </GreaterComponent>
      <Wearable slots="InnerClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <Holdable slots="RightHand+LeftHand" controlpose="true" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use">
        <Upgrade gameversion="0.1401.0.0" msg="ItemMsgPickUpUse" />
      </Holdable>
      <!-- SUIT INVENTORY -->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" containedstateindicatorstyle="tank" containedstateindicatorslot="0">
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="weldingtoolfuel" excludeditems="oxygenitetank" />
        <Containable items="oxygensource" excludeditems="oxygenitetank">
          <StatusEffect type="OnWearing" target="Contained">
            <RequiredItem items="oxygensource" type="Contained" />
            <Conditional condition="lt 5.0" />
            <Sound file="Content/Items/WarningBeepSlow.ogg" range="250" loop="true" />
          </StatusEffect>
        </Containable>
        <Containable items="oxygenitetank">
          <StatusEffect type="OnWearing" target="This,Character" SpeedMultiplier="1.3" setvalue="true" targetslot="0" comparison="And">
            <Conditional IsDead="false" />
            <Conditional HasStatusTag="eq sealed" />
          </StatusEffect>
        </Containable>
        <StatusEffect type="OnWearing" target="Contained" playsoundonrequireditemfailure="true">
          <RequiredItem items="oxygensource,weldingtoolfuel" type="Contained" matchonempty="true" />
          <Conditional condition="lte 0.0" />
          <Sound file="Content/Items/WarningBeep.ogg" range="250" loop="true" />
        </StatusEffect>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
    <!-- A suit preset for 6000m depth pressure protection on which other suits are based on. Don't change anything in this item! If you want to add more suits or make your suits compatible, copy the exampledivingsuit item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuitpreset6000" category="Diving,Equipment" tags="diving,deepdiving,provocative" scale="0.5" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_heavy" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Suit Item" texture="Content/Items/Diving/DivingSuit_Item.png" sourcerect="0,0,146,120" depth="0.55" origin="0.5,0.5" />
      <Body radius="32" width="110" density="20" />
      <!-- ItemComponent to store all effects that should apply to all suits -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hassuit" if it's a player and wearing a diving suit + diving helmet and apply the corresponding pressure protection affliction -->
        <StatusEffect type="OnWearing" target="Character" tags="hassuit" interval="0.1" duration="0.2">
          <Conditional HasStatusTag="eq hashelmet" />
          <Affliction identifier="pressure6000" amount="1" />
        </StatusEffect>
        <!-- EFFECTS FOR ALL SUITS USING THIS PRESET -->
        <!-- play a water ambient sound when moving in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional IsLocalPlayer="true" />
          <Conditional InWater="true" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/SuitWaterAmbience.ogg" type="OnWearing" range="250" loop="true" volumeproperty="Speed" volume="0.8" frequencymultiplier="0.5" />
        </StatusEffect>
        <!-- BOT COMPATIBILITY -->
        <!-- spawn helmet and close valve -->
        <StatusEffect type="OnWearing" target="This" setvalue="true" interval="0.9" comparison="And">
          <Conditional IsBot="true" targetcontainer="true" />
          <Conditional HasStatusTag="neq hashelmet" targetcontainer="true" />
          <SpawnItem identifier="botdivingsuithelmet" spawnposition="SameInventory" spawnifinventoryfull="false" spawnifcantbecontained="false" />
        </StatusEffect>
        <!-- give pressure protection -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" tags="botsuit,sealed,hassuit" PressureProtection="6000.0" interval="0.1" duration="0.2" setvalue="true" disabledeltatime="true">
          <Conditional IsBot="true" />
        </StatusEffect>
        <!-- provide oxygen -->
        <StatusEffect type="OnWearing" target="Contained,Character" OxygenAvailable="1000.0">
          <Conditional IsBot="true" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
      </ItemComponent>
      <!-- GreaterComponent stores suit specific effects to prevent them from getting deleted if only adjusting wearable sprites in a variant item and easily target them specifically if adjustments are needed -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- SUIT SPECIFIC EFFECTS | Copy these into your suit item and adjust the values of condition draining, low pass multipliers, speed multipliers, oxygen refilling and damage modifiers to your liking or remove/add some -->
        <!-- block hull oxygen usage -->
        <StatusEffect type="OnWearing" target="This,Character" interval="0.2" duration="0.2" OxygenAvailable="-100.0" UseHullOxygen="false" comparison="And">
          <Conditional HasStatusTag="eq sealed" />
        </StatusEffect>
        <!-- reduce walking speed -->
        <StatusEffect type="OnWearing" target="Character" SpeedMultiplier="0.6" setvalue="true" interval="0.2" duration="0.2" disabledeltatime="true" />
        <!-- make the character stumble randomly every 2.1s when running with the diving suit 
        <StatusEffect type="OnWearing" target="This,Character" interval="2.1" comparison="And" disabledeltatime="true">
          <Conditional speed="gt 2.8" />
          <Conditional InWater="false" />
          <Affliction identifier="stun" amount="1.5" probability="0.35" />
        </StatusEffect>-->
        <!-- Refill oxygen when the suit is contained. -->
        <StatusEffect type="OnContained" target="Contained" targetslot="0" Condition="1.0" interval="1" disabledeltatime="true">
          <Conditional Voltage="gt 0.01" targetcontainer="true" targetgrandparent="true" targetitemcomponent="Powered" />
          <RequiredItem items="refillableoxygensource" type="Contained" excludebroken="false" excludefullcondition="true" />
        </StatusEffect>
        <!-- supply oxygen to the character and drain the oxygen tank if the valve is closed | also works for oxygenite tanks -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" OxygenAvailable="1000.0" Condition="-0.3" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
        <!-- supply welding fuel to the character and drain the welding fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="weldingfueltank" type="Contained" />
        </StatusEffect>
        <!-- supply incendium fuel to the character and drain the incendium fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetlimbs="Torso" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="incendiumfueltank" type="Contained" />
          <Affliction identifier="burn" amount="3.0" />
        </StatusEffect>
      </GreaterComponent>
      <Wearable slots="InnerClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <Holdable slots="RightHand+LeftHand" controlpose="true" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use">
        <Upgrade gameversion="0.1401.0.0" msg="ItemMsgPickUpUse" />
      </Holdable>
      <!-- SUIT INVENTORY -->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" containedstateindicatorstyle="tank" containedstateindicatorslot="0">
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="weldingtoolfuel" excludeditems="oxygenitetank" />
        <Containable items="oxygensource" excludeditems="oxygenitetank">
          <StatusEffect type="OnWearing" target="Contained">
            <RequiredItem items="oxygensource" type="Contained" />
            <Conditional condition="lt 5.0" />
            <Sound file="Content/Items/WarningBeepSlow.ogg" range="250" loop="true" />
          </StatusEffect>
        </Containable>
        <Containable items="oxygenitetank">
          <StatusEffect type="OnWearing" target="This,Character" SpeedMultiplier="1.3" setvalue="true" targetslot="0" comparison="And">
            <Conditional IsDead="false" />
            <Conditional HasStatusTag="eq sealed" />
          </StatusEffect>
        </Containable>
        <StatusEffect type="OnWearing" target="Contained" playsoundonrequireditemfailure="true">
          <RequiredItem items="oxygensource,weldingtoolfuel" type="Contained" matchonempty="true" />
          <Conditional condition="lte 0.0" />
          <Sound file="Content/Items/WarningBeep.ogg" range="250" loop="true" />
        </StatusEffect>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
    <!-- A suit preset for 7500m depth pressure protection on which other suits are based on. Don't change anything in this item! If you want to add more suits or make your suits compatible, copy the exampledivingsuit item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuitpreset7500" category="Diving,Equipment" tags="diving,deepdiving,provocative" scale="0.5" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_heavy" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Suit Item" texture="Content/Items/Diving/DivingSuit_Item.png" sourcerect="0,0,146,120" depth="0.55" origin="0.5,0.5" />
      <Body radius="32" width="110" density="20" />
      <!-- ItemComponent to store all effects that should apply to all suits -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hassuit" if it's a player and wearing a diving suit + diving helmet and apply the corresponding pressure protection affliction -->
        <StatusEffect type="OnWearing" target="Character" tags="hassuit" interval="0.1" duration="0.2">
          <Conditional HasStatusTag="eq hashelmet" />
          <Affliction identifier="pressure7500" amount="1" />
        </StatusEffect>
        <!-- EFFECTS FOR ALL SUITS USING THIS PRESET -->
        <!-- play a water ambient sound when moving in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional IsLocalPlayer="true" />
          <Conditional InWater="true" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/SuitWaterAmbience.ogg" type="OnWearing" range="250" loop="true" volumeproperty="Speed" volume="0.8" frequencymultiplier="0.5" />
        </StatusEffect>
        <!-- BOT COMPATIBILITY -->
        <!-- spawn helmet and close valve -->
        <StatusEffect type="OnWearing" target="This" setvalue="true" interval="0.9" comparison="And">
          <Conditional IsBot="true" targetcontainer="true" />
          <Conditional HasStatusTag="neq hashelmet" targetcontainer="true" />
          <SpawnItem identifier="botdivingsuithelmet" spawnposition="SameInventory" spawnifinventoryfull="false" spawnifcantbecontained="false" />
        </StatusEffect>
        <!-- give pressure protection -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" tags="botsuit,sealed,hassuit" PressureProtection="7500.0" interval="0.1" duration="0.2" setvalue="true" disabledeltatime="true">
          <Conditional IsBot="true" />
        </StatusEffect>
        <!-- provide oxygen -->
        <StatusEffect type="OnWearing" target="Contained,Character" OxygenAvailable="1000.0">
          <Conditional IsBot="true" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
      </ItemComponent>
      <!-- GreaterComponent stores suit specific effects to prevent them from getting deleted if only adjusting wearable sprites in a variant item and easily target them specifically if adjustments are needed -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- SUIT SPECIFIC EFFECTS | Copy these into your suit item and adjust the values of condition draining, low pass multipliers, speed multipliers, oxygen refilling and damage modifiers to your liking or remove/add some -->
        <!-- block hull oxygen usage -->
        <StatusEffect type="OnWearing" target="This,Character" interval="0.2" duration="0.2" OxygenAvailable="-100.0" UseHullOxygen="false" comparison="And">
          <Conditional HasStatusTag="eq sealed" />
        </StatusEffect>
        <!-- reduce walking speed -->
        <StatusEffect type="OnWearing" target="Character" SpeedMultiplier="0.6" setvalue="true" interval="0.2" duration="0.2" disabledeltatime="true" />
        <!-- make the character stumble randomly every 2.1s when running with the diving suit 
        <StatusEffect type="OnWearing" target="This,Character" interval="2.1" comparison="And" disabledeltatime="true">
          <Conditional speed="gt 2.8" />
          <Conditional InWater="false" />
          <Affliction identifier="stun" amount="1.5" probability="0.35" />
        </StatusEffect>-->
        <!-- Refill oxygen when the suit is contained. -->
        <StatusEffect type="OnContained" target="Contained" targetslot="0" Condition="1.0" interval="1" disabledeltatime="true">
          <Conditional Voltage="gt 0.01" targetcontainer="true" targetgrandparent="true" targetitemcomponent="Powered" />
          <RequiredItem items="refillableoxygensource" type="Contained" excludebroken="false" excludefullcondition="true" />
        </StatusEffect>
        <!-- supply oxygen to the character and drain the oxygen tank if the valve is closed | also works for oxygenite tanks -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" OxygenAvailable="1000.0" Condition="-0.3" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
        <!-- supply welding fuel to the character and drain the welding fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="weldingfueltank" type="Contained" />
        </StatusEffect>
        <!-- supply incendium fuel to the character and drain the incendium fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetlimbs="Torso" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="incendiumfueltank" type="Contained" />
          <Affliction identifier="burn" amount="3.0" />
        </StatusEffect>
      </GreaterComponent>
      <Wearable slots="InnerClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <Holdable slots="RightHand+LeftHand" controlpose="true" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use">
        <Upgrade gameversion="0.1401.0.0" msg="ItemMsgPickUpUse" />
      </Holdable>
      <!-- SUIT INVENTORY -->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" containedstateindicatorstyle="tank" containedstateindicatorslot="0">
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="weldingtoolfuel" excludeditems="oxygenitetank" />
        <Containable items="oxygensource" excludeditems="oxygenitetank">
          <StatusEffect type="OnWearing" target="Contained">
            <RequiredItem items="oxygensource" type="Contained" />
            <Conditional condition="lt 5.0" />
            <Sound file="Content/Items/WarningBeepSlow.ogg" range="250" loop="true" />
          </StatusEffect>
        </Containable>
        <Containable items="oxygenitetank">
          <StatusEffect type="OnWearing" target="This,Character" SpeedMultiplier="1.3" setvalue="true" targetslot="0" comparison="And">
            <Conditional IsDead="false" />
            <Conditional HasStatusTag="eq sealed" />
          </StatusEffect>
        </Containable>
        <StatusEffect type="OnWearing" target="Contained" playsoundonrequireditemfailure="true">
          <RequiredItem items="oxygensource,weldingtoolfuel" type="Contained" matchonempty="true" />
          <Conditional condition="lte 0.0" />
          <Sound file="Content/Items/WarningBeep.ogg" range="250" loop="true" />
        </StatusEffect>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
    <!-- A suit preset for 8000m depth pressure protection on which other suits are based on. Don't change anything in this item! If you want to add more suits or make your suits compatible, copy the exampledivingsuit item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuitpreset8000" category="Diving,Equipment" tags="diving,deepdiving,provocative" scale="0.5" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_heavy" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Suit Item" texture="Content/Items/Diving/DivingSuit_Item.png" sourcerect="0,0,146,120" depth="0.55" origin="0.5,0.5" />
      <Body radius="32" width="110" density="20" />
      <!-- ItemComponent to store all effects that should apply to all suits -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hassuit" if it's a player and wearing a diving suit + diving helmet and apply the corresponding pressure protection affliction -->
        <StatusEffect type="OnWearing" target="Character" tags="hassuit" interval="0.1" duration="0.2">
          <Conditional HasStatusTag="eq hashelmet" />
          <Affliction identifier="pressure8000" amount="1" />
        </StatusEffect>
        <!-- EFFECTS FOR ALL SUITS USING THIS PRESET -->
        <!-- play a water ambient sound when moving in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional IsLocalPlayer="true" />
          <Conditional InWater="true" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/SuitWaterAmbience.ogg" type="OnWearing" range="250" loop="true" volumeproperty="Speed" volume="0.8" frequencymultiplier="0.5" />
        </StatusEffect>
        <!-- BOT COMPATIBILITY -->
        <!-- spawn helmet and close valve -->
        <StatusEffect type="OnWearing" target="This" setvalue="true" interval="0.9" comparison="And">
          <Conditional IsBot="true" targetcontainer="true" />
          <Conditional HasStatusTag="neq hashelmet" targetcontainer="true" />
          <SpawnItem identifier="botdivingsuithelmet" spawnposition="SameInventory" spawnifinventoryfull="false" spawnifcantbecontained="false" />
        </StatusEffect>
        <!-- give pressure protection -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" tags="botsuit,sealed,hassuit" PressureProtection="8000.0" interval="0.1" duration="0.2" setvalue="true" disabledeltatime="true">
          <Conditional IsBot="true" />
        </StatusEffect>
        <!-- provide oxygen -->
        <StatusEffect type="OnWearing" target="Contained,Character" OxygenAvailable="1000.0">
          <Conditional IsBot="true" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
      </ItemComponent>
      <!-- GreaterComponent stores suit specific effects to prevent them from getting deleted if only adjusting wearable sprites in a variant item and easily target them specifically if adjustments are needed -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- SUIT SPECIFIC EFFECTS | Copy these into your suit item and adjust the values of condition draining, low pass multipliers, speed multipliers, oxygen refilling and damage modifiers to your liking or remove/add some -->
        <!-- block hull oxygen usage -->
        <StatusEffect type="OnWearing" target="This,Character" interval="0.2" duration="0.2" OxygenAvailable="-100.0" UseHullOxygen="false" comparison="And">
          <Conditional HasStatusTag="eq sealed" />
        </StatusEffect>
        <!-- reduce walking speed -->
        <StatusEffect type="OnWearing" target="Character" SpeedMultiplier="0.6" setvalue="true" interval="0.2" duration="0.2" disabledeltatime="true" />
        <!-- make the character stumble randomly every 2.1s when running with the diving suit 
        <StatusEffect type="OnWearing" target="This,Character" interval="2.1" comparison="And" disabledeltatime="true">
          <Conditional speed="gt 2.8" />
          <Conditional InWater="false" />
          <Affliction identifier="stun" amount="1.5" probability="0.35" />
        </StatusEffect>-->
        <!-- Refill oxygen when the suit is contained. -->
        <StatusEffect type="OnContained" target="Contained" targetslot="0" Condition="1.0" interval="1" disabledeltatime="true">
          <Conditional Voltage="gt 0.01" targetcontainer="true" targetgrandparent="true" targetitemcomponent="Powered" />
          <RequiredItem items="refillableoxygensource" type="Contained" excludebroken="false" excludefullcondition="true" />
        </StatusEffect>
        <!-- supply oxygen to the character and drain the oxygen tank if the valve is closed | also works for oxygenite tanks -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" OxygenAvailable="1000.0" Condition="-0.3" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
        <!-- supply welding fuel to the character and drain the welding fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="weldingfueltank" type="Contained" />
        </StatusEffect>
        <!-- supply incendium fuel to the character and drain the incendium fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetlimbs="Torso" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="incendiumfueltank" type="Contained" />
          <Affliction identifier="burn" amount="3.0" />
        </StatusEffect>
      </GreaterComponent>
      <Wearable slots="InnerClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <Holdable slots="RightHand+LeftHand" controlpose="true" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use">
        <Upgrade gameversion="0.1401.0.0" msg="ItemMsgPickUpUse" />
      </Holdable>
      <!-- SUIT INVENTORY -->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" containedstateindicatorstyle="tank" containedstateindicatorslot="0">
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="weldingtoolfuel" excludeditems="oxygenitetank" />
        <Containable items="oxygensource" excludeditems="oxygenitetank">
          <StatusEffect type="OnWearing" target="Contained">
            <RequiredItem items="oxygensource" type="Contained" />
            <Conditional condition="lt 5.0" />
            <Sound file="Content/Items/WarningBeepSlow.ogg" range="250" loop="true" />
          </StatusEffect>
        </Containable>
        <Containable items="oxygenitetank">
          <StatusEffect type="OnWearing" target="This,Character" SpeedMultiplier="1.3" setvalue="true" targetslot="0" comparison="And">
            <Conditional IsDead="false" />
            <Conditional HasStatusTag="eq sealed" />
          </StatusEffect>
        </Containable>
        <StatusEffect type="OnWearing" target="Contained" playsoundonrequireditemfailure="true">
          <RequiredItem items="oxygensource,weldingtoolfuel" type="Contained" matchonempty="true" />
          <Conditional condition="lte 0.0" />
          <Sound file="Content/Items/WarningBeep.ogg" range="250" loop="true" />
        </StatusEffect>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
    <!-- A suit preset for 10000m depth pressure protection on which other suits are based on. Don't change anything in this item! If you want to add more suits or make your suits compatible, copy the exampledivingsuit item from divinggear_modding_examples.xml and follow the steps described via comments in the item. -->
    <Item name="" identifier="divingsuitpreset10000" category="Diving,Equipment" tags="diving,deepdiving,provocative" scale="0.5" fireproof="true" description="" allowdroppingonswapwith="diving" impactsoundtag="impact_metal_heavy" botpriority="1" hideinmenus="true">
      <Sprite name="Diving Suit Item" texture="Content/Items/Diving/DivingSuit_Item.png" sourcerect="0,0,146,120" depth="0.55" origin="0.5,0.5" />
      <Body radius="32" width="110" density="20" />
      <!-- ItemComponent to store all effects that should apply to all suits -->
      <ItemComponent canbeselected="false" allowingameediting="false">
        <!-- TAGS -->
        <!-- tag the character with "hassuit" if it's a player and wearing a diving suit + diving helmet and apply the corresponding pressure protection affliction -->
        <StatusEffect type="OnWearing" target="Character" tags="hassuit" interval="0.1" duration="0.2">
          <Conditional HasStatusTag="eq hashelmet" />
          <Affliction identifier="pressure10000" amount="1" />
        </StatusEffect>
        <!-- EFFECTS FOR ALL SUITS USING THIS PRESET -->
        <!-- play a water ambient sound when moving in water -->
        <StatusEffect type="OnWearing" target="Character" comparison="And">
          <Conditional IsLocalPlayer="true" />
          <Conditional InWater="true" />
          <Sound file="%ModDir:3074045632%/Content/Items/Diving/SuitWaterAmbience.ogg" type="OnWearing" range="250" loop="true" volumeproperty="Speed" volume="0.8" frequencymultiplier="0.5" />
        </StatusEffect>
        <!-- BOT COMPATIBILITY -->
        <!-- spawn helmet and close valve -->
        <StatusEffect type="OnWearing" target="This" setvalue="true" interval="0.9" comparison="And">
          <Conditional IsBot="true" targetcontainer="true" />
          <Conditional HasStatusTag="neq hashelmet" targetcontainer="true" />
          <SpawnItem identifier="botdivingsuithelmet" spawnposition="SameInventory" spawnifinventoryfull="false" spawnifcantbecontained="false" />
        </StatusEffect>
        <!-- give pressure protection -->
        <StatusEffect type="OnWearing" target="Character" ObstructVision="true" tags="botsuit,sealed,hassuit" PressureProtection="10000.0" interval="0.1" duration="0.2" setvalue="true" disabledeltatime="true">
          <Conditional IsBot="true" />
        </StatusEffect>
        <!-- provide oxygen -->
        <StatusEffect type="OnWearing" target="Contained,Character" OxygenAvailable="1000.0">
          <Conditional IsBot="true" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
      </ItemComponent>
      <!-- GreaterComponent stores suit specific effects to prevent them from getting deleted if only adjusting wearable sprites in a variant item and easily target them specifically if adjustments are needed -->
      <GreaterComponent canbeselected="false" canbepicked="false" allowingameediting="false" timeframe="0">
        <!-- SUIT SPECIFIC EFFECTS | Copy these into your suit item and adjust the values of condition draining, low pass multipliers, speed multipliers, oxygen refilling and damage modifiers to your liking or remove/add some -->
        <!-- block hull oxygen usage -->
        <StatusEffect type="OnWearing" target="This,Character" interval="0.2" duration="0.2" OxygenAvailable="-100.0" UseHullOxygen="false" comparison="And">
          <Conditional HasStatusTag="eq sealed" />
        </StatusEffect>
        <!-- reduce walking speed -->
        <StatusEffect type="OnWearing" target="Character" SpeedMultiplier="0.6" setvalue="true" interval="0.2" duration="0.2" disabledeltatime="true" />
        <!-- make the character stumble randomly every 2.1s when running with the diving suit 
        <StatusEffect type="OnWearing" target="This,Character" interval="2.1" comparison="And" disabledeltatime="true">
          <Conditional speed="gt 2.8" />
          <Conditional InWater="false" />
          <Affliction identifier="stun" amount="1.5" probability="0.35" />
        </StatusEffect>-->
        <!-- Refill oxygen when the suit is contained. -->
        <StatusEffect type="OnContained" target="Contained" targetslot="0" Condition="1.0" interval="1" disabledeltatime="true">
          <Conditional Voltage="gt 0.01" targetcontainer="true" targetgrandparent="true" targetitemcomponent="Powered" />
          <RequiredItem items="refillableoxygensource" type="Contained" excludebroken="false" excludefullcondition="true" />
        </StatusEffect>
        <!-- supply oxygen to the character and drain the oxygen tank if the valve is closed | also works for oxygenite tanks -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" OxygenAvailable="1000.0" Condition="-0.3" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="oxygensource" type="Contained" />
        </StatusEffect>
        <!-- supply welding fuel to the character and drain the welding fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="weldingfueltank" type="Contained" />
        </StatusEffect>
        <!-- supply incendium fuel to the character and drain the incendium fuel tank if the valve is closed -->
        <StatusEffect type="OnWearing" target="Contained,Character" targetlimbs="Torso" targetslot="0" Oxygen="-10.0" Condition="-0.5" interval="1" disabledeltatime="true" comparison="And">
          <Conditional IsDead="false" />
          <Conditional HasStatusTag="eq sealed" />
          <RequiredItem items="incendiumfueltank" type="Contained" />
          <Affliction identifier="burn" amount="3.0" />
        </StatusEffect>
      </GreaterComponent>
      <Wearable slots="InnerClothes" msg="ItemMsgEquipSelect" displaycontainedstatus="true" canbeselected="false" canbepicked="true" pickkey="Select" />
      <Holdable slots="RightHand+LeftHand" controlpose="true" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgPickUpUse" canbeselected="false" canbepicked="true" pickkey="Use">
        <Upgrade gameversion="0.1401.0.0" msg="ItemMsgPickUpUse" />
      </Holdable>
      <!-- SUIT INVENTORY -->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" containedstateindicatorstyle="tank" containedstateindicatorslot="0">
        <SlotIcon slotindex="0" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="weldingtoolfuel" excludeditems="oxygenitetank" />
        <Containable items="oxygensource" excludeditems="oxygenitetank">
          <StatusEffect type="OnWearing" target="Contained">
            <RequiredItem items="oxygensource" type="Contained" />
            <Conditional condition="lt 5.0" />
            <Sound file="Content/Items/WarningBeepSlow.ogg" range="250" loop="true" />
          </StatusEffect>
        </Containable>
        <Containable items="oxygenitetank">
          <StatusEffect type="OnWearing" target="This,Character" SpeedMultiplier="1.3" setvalue="true" targetslot="0" comparison="And">
            <Conditional IsDead="false" />
            <Conditional HasStatusTag="eq sealed" />
          </StatusEffect>
        </Containable>
        <StatusEffect type="OnWearing" target="Contained" playsoundonrequireditemfailure="true">
          <RequiredItem items="oxygensource,weldingtoolfuel" type="Contained" matchonempty="true" />
          <Conditional condition="lte 0.0" />
          <Sound file="Content/Items/WarningBeep.ogg" range="250" loop="true" />
        </StatusEffect>
      </ItemContainer>
      <aitarget maxsightrange="1500" />
    </Item>
  </Items>
</Override>